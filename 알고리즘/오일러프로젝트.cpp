#include <stdio.h>
//10보다 작은 자연수 중에서 3 또는 5의 배수는 3, 5, 6, 9 이고, 이것을 모두 더하면 23입니다.
//
//1000보다 작은 자연수 중에서 3 또는 5의 배수를 모두 더하면 얼마일까요 ?

void euler_1(int size){
	int sum=0;
	int i;
	for (i = 0; i < size; i++){
		if (i % 3 == 0 || i % 5 ==0){
			sum += i;
		}
	}
	printf("%d\n", sum);
}
//
//피보나치 수열의 각 항은 바로 앞의 항 두 개를 더한 것이 됩니다. 1과 2로 시작하는 경우 이 수열은 아래와 같습니다.
//
//1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//짝수이면서 4백만 이하인 모든 항을 더하면 얼마가 됩니까 ?
void euler_2(int size){
	int a1 = 1;
	int a2 = 2;
	int a3 = 0;
	int sum = 2;
	int i;

	while (1){
		a3 = a1 + a2;
		a1 = a2;
		a2 = a3;
		if (a3 <= size && a3%2==0){
			sum += a3;
		}
		else if(a3>size){
			break;
		}
	}
	printf("%d", sum);
}
//어떤 수를 소수의 곱으로만 나타내는 것을 소인수분해라 하고, 이 소수들을 그 수의 소인수라고 합니다.
//예를 들면 13195의 소인수는 5, 7, 13, 29 입니다.
//
//600851475143의 소인수 중에서 가장 큰 수를 구하세요.
int is_sosu(int num){
	int i;
	for (i = 2; i < num / 2 +1; i++){
		if (num%i == 0){
			return 0;
		}
		
	}
	return 1;
}
void euler_3(int size){
	int i = 1;
	for (i = 1; i < size/1000 ; i++){
		if (size % i == 0){
			if (is_sosu(i))
				printf("%d\n", i);
		}
	}
}
int euler_4(){
	int i = 100, j=100;
	int arr[6];
	FILE* fp;
	fopen_s(&fp, "data.txt", "wt");
	for (i = 999 ; i > 99; i--){
		for (j = 999; j > 99; j--){
			int re = i * j;
			arr[0] = re / 100000;
			arr[1] = (re-100000*arr[0]) / 10000;
			arr[2] = (re-100000*arr[0]-10000*arr[1]) / 1000;
			arr[3] = (re - 100000 * arr[0] - 10000 * arr[1] - 1000*arr[2]) / 100;
			arr[4] = (re - 100000 * arr[0] - 10000 * arr[1] - 1000 * arr[2] - 100*arr[3]) / 10;
			arr[5] = (re - 100000 * arr[0] - 10000 * arr[1] - 1000 * arr[2] - 100 * arr[3]-10*arr[4]) / 1;
			if (arr[0] !=0){
				if ((arr[0] == arr[5]) && (arr[1] == arr[4]) && (arr[2] == arr[3])){
					printf("%d\n", re);
					fprintf(fp, "%d\n", re);
				}
			}
			else if (arr[0]==0){
				if ((arr[1] == arr[5]) && (arr[2] == arr[4])){
					//printf("%d\n", re);
				}
			}
		}
	}
	return 0;
}

void SimpleFunc(void)
{
	static int num1 = 0;
	int num2 = 0;
	num1++;
	num2++;
	printf("static: %d, local: %d \n", num1, num2);
}
//
//1 ~10 사이의 어떤 수로도 나누어 떨어지는 가장 작은 수는 2520입니다.
//그러면 1 ~20 사이의 어떤 수로도 나누어 떨어지는 가장 작은 수는 얼마입니까 ?
void euler_6(){
	int i, j;
	for (i = 20; i < 1000000000; i++){
		for (j = 1; j < 21; j++){
			if (i%j != 0){
				break;
			}
			if (j == 20){
				printf("%d\n", i);
				return;
			}
		}
	}
}
//그러면 1부터 100까지 자연수에 대해 "합의 제곱"과 "제곱의 합"의 차이는 얼마입니까 ?
void euler_7(){
	int i, j;
	int sum_squre=0;
	int squre_sum=0;
	for (i = 1; i < 101; i++){
		sum_squre += i;
		squre_sum += (i*i);
	}
	sum_squre *= sum_squre;

	printf("%d\n", sum_squre - squre_sum);
}
//소수를 크기 순으로 나열하면 2, 3, 5, 7, 11, 13, ... 과 같이 됩니다.
//이 때 10, 001번째의 소수를 구하세요.
void euler_8(){
	int i,j;
	j = 2;
	for (i = 1; i < 10002; i++){
		while (j<1000000){
			if (is_sosu(j)){
				break;
			}
			j++;
		}
		printf("%d번째 소수 = %d\n", i, j);
		j++;
	}
}
void a(){
	static int a = 0;
	a++;
	printf("%d\n", a);
}
void b(){
	static int a = 0;
	a++;
	printf("%d\n", a);
}
void euler_9(){
	char str[1001] = "7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450";
	int max = 0;
	int size = sizeof(str) / sizeof(char);
	int i,j;
	for (i = 0; i < size; i++){
		int mul = 1;
		for (j = i; j < i+5; j++){
			mul *= (str[j]-48);
		}
		printf("%d %d %d %d %d 최대값 = %d 현재 = %d\n", str[i]-48 , str[i + 1]-48 , str[i + 2]-48 , str[i + 3]-48 , str[i + 4]-48, max, mul);
		if (mul >= max){
			max = mul;
		}
	}
	printf("%d\n", max);
}
	/*세 자연수 a, b, c 가 피타고라스 정리 a2 + b2 = c2 를 만족하면 피타고라스 수라고 부릅니다(여기서 a < b < c).
	예를 들면 32 + 42 = 9 + 16 = 25 = 52이므로 3, 4, 5는 피타고라스 수입니다.
	a + b + c = 1000 인 피타고라스 수 a, b, c는 한 가지 뿐입니다.이 때, a × b × c 는 얼마입니까 ?*/
void euler_10(){
	int size = 500;
	int i, j;
	for (i = 2; i < size; i++){
		for (j = 1; j < i; j++){
			if (i*i + j*j == (1000 - i - j)*(1000 - i - j)){
				printf("a = %d, b= %d, c= %d 결과 : %d", j, i, 1000 - i - j, i*j*(1000-i-j));
			}
		}
	}
}
//10 이하의 소수를 모두 더하면 2 + 3 + 5 + 7 = 17 이 됩니다.
//이백만(2, 000, 000) 이하 소수의 합은 얼마입니까 ?
void euler_11(){
	int i, j;
	int sum=0;
	j = 2;
	for (i = 1; i < 10000000; i++){
		while (j<2000001){
			if (is_sosu(j)){
				break;
			}
			j++;
		}
		//printf("%d번째 소수 = %d\n", i, j);
		sum += j;
		if (j>2000000){
			break;
		}
		j++;
		//if (j>2000000){
	}
	printf("%d", sum-j);
}
//void main(){
//	euler_11();
//}