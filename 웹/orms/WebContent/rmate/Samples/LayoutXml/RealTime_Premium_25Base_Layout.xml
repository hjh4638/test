<?xml version="1.0" encoding="utf-8"?>
<rMateChart backgroundColor="0xFFFFFF"  cornerRadius="12" borderStyle="solid">
	<Options>
		<Caption text="단위 데이터 실시간 비교 통합(마우스 드래그로  영역을 설정하면 확대/축소를 할 수 있습니다" color="0xff0000"/>
		<SubCaption text="전일 데이터와 금일 데이터를 실시간으로 표현합니다.(랜덤 데이터)" textAlign="right" fontSize="11"/>
		<Legend fontSize="11" useVisibleCheck="true"/>
	</Options>

	<DateFormatter id="dateOrgFmt" formatString="YYYY/MM/DD HH:NN:SS"/> 
	<DateFormatter id="dateFmt" formatString="HH:NN"/>
	<DateFormatter id="dateFmt2" formatString="HH:NN"/>
	<NumberFormatter id="numFmt" precision="0"/>

	<Combination2DChart id="chart" showDataTips="true" dataTipMode="multiple">
		<series>

			<!-- 전일 누적 데이터 -->
			<Area2DSeries id="yesterday25" xField="date" yField="yesTotalData"  displayName="전일 누적 데이터">
				<horizontalAxis>
					<DateTimeAxis id="hAxis3" displayLocalTime="true"  labelUnits="hours" dataUnits="minutes" formatter="{dateOrgFmt}" displayName="Time"/>
				</horizontalAxis>
				<verticalAxis>
					<LinearAxis id="vAxis" maximum="1000"/>
				</verticalAxis>
				<areaStroke>
					<Stroke color="0x6699CC" weight="1"/>
				</areaStroke>
				<areaFill>
					<SolidColor color="0x6699CC" alpha="0.25"/>
				</areaFill>
			</Area2DSeries>
			
			<!-- 금일 누적 데이터 -->
			<Area2DSeries id="today25" xField="date" yField="todayTotalData" verticalAxis="{vAxis}" displayName="금일 누적 데이터">
				<horizontalAxis>
					<DateTimeAxis id="hAxis" displayLocalTime="true"  labelUnits="hours" dataUnits="minutes" formatter="{dateOrgFmt}" displayName="Time"/>
				</horizontalAxis>
				<areaStroke>
					<Stroke color="0xE48701" weight="1"/>
				</areaStroke>
				<areaFill>
					<SolidColor color="0xE48701" alpha="0.25"/>
				</areaFill>
			</Area2DSeries>
			
			<!-- 전일 1시간 데이터 -->
			<Line2DSeries id="yesterday" xField="date" yField="yesData" verticalAxis="{vAxis2}"  displayName="전일 데이터">
				<horizontalAxis>
					<DateTimeAxis id="hAxis4" displayLocalTime="true" labelUnits="minutes" dataUnits="seconds" interval="5" formatter="{dateOrgFmt}" displayName="Time"/>
				</horizontalAxis>
				<lineStroke>
					<Stroke color="0xFFCC66" weight="1"/>
				</lineStroke>
				<verticalAxis>
					<LinearAxis id="vAxis2"/>
				</verticalAxis>
			</Line2DSeries>

			<!-- 금일 1시간 데이터 -->
			<Line2DSeries id="today" xField="date" yField="todayData" displayName="금일 데이터">
				<lineStroke>
					<Stroke color="0x339966" weight="1"/>
				</lineStroke>
				<horizontalAxis>
					<DateTimeAxis id="hAxis2" displayLocalTime="true" labelUnits="minutes" dataUnits="seconds" interval="5" formatter="{dateOrgFmt}" displayName="Time"/>
				</horizontalAxis>
				<verticalAxis>
					<LinearAxis id="vAxis2"/>
				</verticalAxis>
			</Line2DSeries>
		</series>
		<horizontalAxisRenderers>
			<Axis2DRenderer axis="{hAxis}" placement="bottom" formatter="{dateFmt2}"/>
			<Axis2DRenderer axis="{hAxis2}" placement="top"  formatter="{dateFmt}"/>
			<!-- hAxis3, hAxis4 렌더러는 정의는 하였지만, 보여지지 않게 설정함. -->
			<Axis2DRenderer axis="{hAxis3}" placement="top" showLabels="false" showLine="false" tickPlacement="none" minorTickPlacement="none" tickLength="0" minorTickLength="0" labelGap="0"/>
			<Axis2DRenderer axis="{hAxis4}" placement="top" showLabels="false" showLine="false" tickPlacement="none" minorTickPlacement="none" tickLength="0" minorTickLength="0" labelGap="0"/>
		</horizontalAxisRenderers>
		<verticalAxisRenderers>
			<Axis2DRenderer axis="{vAxis}" placement="right" formatter="{numFmt}"/>
			<Axis2DRenderer axis="{vAxis2}" placement="left" formatter="{numFmt}"/>
		</verticalAxisRenderers>
		<annotationElements>
			<CrossRangeZoomer zoomType="horizontal" resetMode="initial" fontSize="11" color="0x00000"
							useDualCrossXLabel="true" useDualCrossYLabel="true"
							horizontalLabelFormatter="{numFmt}" horizontalLabelOppFormatter="{numFmt}"
							verticalLabelFormatter="{dateFmt2}" verticalLabelOppFormatter="{dateFmt}"
							enableZooming="true" enableCrossHair="true">
						<zoomRangeStroke>
							<Stroke weight="1" color="0xFF0000" alpha="0.3"/>
						</zoomRangeStroke>
						<zoomRangeFill>
							<SolidColor color="0x0000FF" alpha="0.2"/>
						</zoomRangeFill>
			</CrossRangeZoomer>
		</annotationElements>
	</Combination2DChart>
	
	<HttpMultiServiceRepeater baseURL="http://demo.riamore.net/realtimeSample/" targetController="{chart}" requestTimeout="30">
<!-- 
baseURL : RPCItem속성 "url"의 기본 URL에 해당됩니다. 즉 RPCItem의 url은 "baseURL + url"이 됩니다
method - get, post : HTTP프로토콜 메소드입니다. get, post를 결정합니다
requestTimeout : 요청 후 응답 대기 시간입니다
targetController : RPCItem의 target의 컨트롤러에 해당됩니다. 즉 언제나 차트의 id가 되어야 합니다
showErrorMessage - true, false : RPC요청 시 실패 또는 에러 발생 시 Alert메시지 창을 띄울지를 나타냅니다
 -->
		<RPCList>
			<!-- 속성 설명  -->
			<!-- name : RPC 의 이름(ID) 입니다. 반드시 정의하십시오.(임의의 스트링) -->
			<!-- target : RPC 요청 후 응답으로 받은 데이터를 출력시킬 차트의 시리즈(series)를 설정해주세요. -->
			<!-- interval : RPC 요청 interval 입니다. 최초 차트 구동 후 부터 적용됩니다. (단위 : 초)-->
			<!-- concurrency : HTTP 동일 서비스 발생 시 처리 방법을 나타냅니다. multiple, single, last 3개 유효값이 존재 -->
			<!-- ***multiple : 기존 요구 취소하지 않고 모두 요청을 보냅니다.-->
			<!-- ***single : 한 번에 1 개의 요청만 가능, 복수의 요청 발생 시 실패 경고창이 뜹니다.-->
			<!-- **last : 기존의 요청을 모두 취소하고 마지막 요청만을 보냅니다. -->
			<!-- retryCount : 요청 실패 시 재시도 횟수를 나타냅니다. -->
			<RPCItem name="rpc1" url="data23ToCurrent.jsp" target="{today25}" interval="600" concurrency="last" retryCount="30"/>
			<RPCItem name="rpc2" url="data23ToYesterday.jsp" target="{yesterday25}" concurrency="last" retryCount="30"/>
			<RPCItem name="rpc3" url="hourDataToday.jsp" target="{today}" interval="5" concurrency="last" retryCount="30"/>
			<RPCItem name="rpc4" url="hourDataYesterday.jsp" target="{yesterday}" concurrency="last" retryCount="30"/>
		</RPCList>
	</HttpMultiServiceRepeater>
</rMateChart>